{
    "openapi": "3.0.0",
    "info": {
        "title": "Mentrify API Documentation",
        "description": "API documentation for the Mentrify application",
        "version": "1.0.0"
    },
    "servers": [
        {
            "url": "http://localhost:8080/api",
            "description": "Mentrify API Server"
        }
    ],
    "paths": {
        "/register": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Register a new user as Mentee or Mentor",
                "description": "Registers a new user (Mentee or Mentor) and returns user data along with an API token.",
                "operationId": "registerUser",
                "requestBody": {
                    "description": "User registration details. Provide 'user_type' as 'mentee' or 'mentor'. Fill fields accordingly.",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "first_name",
                                    "last_name",
                                    "email",
                                    "password",
                                    "password_confirmation",
                                    "user_type"
                                ],
                                "properties": {
                                    "first_name": {
                                        "type": "string",
                                        "example": "John"
                                    },
                                    "last_name": {
                                        "type": "string",
                                        "example": "Doe"
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "john.doe@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "password123"
                                    },
                                    "password_confirmation": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "password123"
                                    },
                                    "user_type": {
                                        "type": "string",
                                        "enum": [
                                            "mentee",
                                            "mentor"
                                        ],
                                        "example": "mentee"
                                    },
                                    "interests": {
                                        "description": "Required if user_type is 'mentee'",
                                        "type": "string",
                                        "example": "Data Science, Product Management"
                                    },
                                    "goals": {
                                        "description": "Required if user_type is 'mentee'",
                                        "type": "string",
                                        "example": "To learn new skills and grow my career."
                                    },
                                    "photo_url": {
                                        "description": "Required if user_type is 'mentor'",
                                        "type": "string",
                                        "format": "url",
                                        "example": "http://example.com/photo.jpg"
                                    },
                                    "job_title": {
                                        "description": "Required if user_type is 'mentor'",
                                        "type": "string",
                                        "example": "Software Engineer"
                                    },
                                    "company": {
                                        "description": "Optional, for mentors",
                                        "type": "string",
                                        "example": "Tech Solutions Inc."
                                    },
                                    "location": {
                                        "description": "Required if user_type is 'mentor'",
                                        "type": "string",
                                        "example": "San Francisco, CA"
                                    },
                                    "category": {
                                        "description": "Required if user_type is 'mentor'",
                                        "type": "string",
                                        "enum": [
                                            "Engineering",
                                            "Product",
                                            "Design",
                                            "Marketing",
                                            "Leadership",
                                            "Other"
                                        ],
                                        "example": "Engineering"
                                    },
                                    "skills": {
                                        "description": "Required if user_type is 'mentor'",
                                        "type": "string",
                                        "example": "PHP, Laravel, API Design"
                                    },
                                    "bio": {
                                        "description": "Required if user_type is 'mentor'",
                                        "type": "string",
                                        "example": "Experienced software engineer passionate about mentoring."
                                    },
                                    "years_of_experience": {
                                        "description": "Required if user_type is 'mentor'",
                                        "type": "integer",
                                        "example": 5
                                    },
                                    "availability_hours_week": {
                                        "description": "Required if user_type is 'mentor'",
                                        "type": "number",
                                        "format": "float",
                                        "example": 10.5
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful registration",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "User registered successfully"
                                        },
                                        "user": {
                                            "$ref": "#/components/schemas/User"
                                        },
                                        "access_token": {
                                            "type": "string",
                                            "example": "1|xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx"
                                        },
                                        "token_type": {
                                            "type": "string",
                                            "example": "Bearer"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error"
                    }
                }
            }
        },
        "/login": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Login an existing user",
                "description": "Logs in a user and returns user data along with an API token.",
                "operationId": "loginUser",
                "requestBody": {
                    "description": "User login credentials",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email",
                                    "password"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "john.doe@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "password123"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful login",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Login successful"
                                        },
                                        "user": {
                                            "$ref": "#/components/schemas/User"
                                        },
                                        "access_token": {
                                            "type": "string",
                                            "example": "2|yyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyy"
                                        },
                                        "token_type": {
                                            "type": "string",
                                            "example": "Bearer"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Invalid credentials"
                    },
                    "422": {
                        "description": "Validation Error"
                    }
                }
            }
        },
        "/logout": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Logout the authenticated user",
                "description": "Invalidates the current user's API token.",
                "operationId": "logoutUser",
                "responses": {
                    "200": {
                        "description": "Successfully logged out",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Successfully logged out"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "apiAuth": []
                    }
                ]
            }
        }
    },
    "components": {
        "schemas": {
            "User": {
                "title": "User",
                "description": "User model",
                "properties": {
                    "id": {
                        "description": "User ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "first_name": {
                        "description": "User's first name",
                        "type": "string"
                    },
                    "last_name": {
                        "description": "User's last name",
                        "type": "string"
                    },
                    "email": {
                        "description": "User's email address",
                        "type": "string",
                        "format": "email"
                    },
                    "email_verified_at": {
                        "description": "Timestamp of email verification",
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "user_type": {
                        "description": "Type of user",
                        "type": "string",
                        "enum": [
                            "mentee",
                            "mentor"
                        ]
                    },
                    "interests": {
                        "description": "Mentee's interests (comma-separated or JSON)",
                        "type": "string",
                        "nullable": true
                    },
                    "goals": {
                        "description": "Mentee's goals",
                        "type": "string",
                        "nullable": true
                    },
                    "photo_url": {
                        "description": "Mentor's photo URL",
                        "type": "string",
                        "nullable": true
                    },
                    "job_title": {
                        "description": "Mentor's job title",
                        "type": "string",
                        "nullable": true
                    },
                    "company": {
                        "description": "Mentor's company (optional)",
                        "type": "string",
                        "nullable": true
                    },
                    "location": {
                        "description": "Mentor's location",
                        "type": "string",
                        "nullable": true
                    },
                    "category": {
                        "description": "Mentor's category",
                        "type": "string",
                        "nullable": true
                    },
                    "skills": {
                        "description": "Mentor's skills (comma-separated or JSON)",
                        "type": "string",
                        "nullable": true
                    },
                    "bio": {
                        "description": "Mentor's biography",
                        "type": "string",
                        "nullable": true
                    },
                    "years_of_experience": {
                        "description": "Mentor's years of experience",
                        "type": "integer",
                        "nullable": true
                    },
                    "availability_hours_week": {
                        "description": "Mentor's availability in hours per week",
                        "type": "number",
                        "format": "float",
                        "nullable": true
                    },
                    "created_at": {
                        "description": "Timestamp of user creation",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "description": "Timestamp of last user update",
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            }
        },
        "securitySchemes": {
            "apiAuth": {
                "type": "http",
                "description": "Bearer token for authentication",
                "bearerFormat": "JWT",
                "scheme": "bearer"
            }
        }
    },
    "tags": [
        {
            "name": "Authentication",
            "description": "Authentication"
        }
    ]
}