{
    "openapi": "3.0.0",
    "info": {
        "title": "Mentrify API Documentation",
        "description": "API documentation for the Mentrify application",
        "version": "1.0.0"
    },
    "servers": [
        {
            "url": "http://localhost:8080/api",
            "description": "Mentrify API Server"
        }
    ],
    "paths": {
        "/register": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Register a new user as Mentee or Mentor",
                "description": "Registers a new user (Mentee or Mentor) and returns user data along with an API token.",
                "operationId": "registerUser",
                "requestBody": {
                    "description": "User registration details. Provide 'user_type' as 'mentee' or 'mentor'. Fill fields accordingly.",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "first_name",
                                    "last_name",
                                    "email",
                                    "password",
                                    "password_confirmation",
                                    "user_type"
                                ],
                                "properties": {
                                    "first_name": {
                                        "type": "string",
                                        "example": "John"
                                    },
                                    "last_name": {
                                        "type": "string",
                                        "example": "Doe"
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "john.doe@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "password123"
                                    },
                                    "password_confirmation": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "password123"
                                    },
                                    "user_type": {
                                        "type": "string",
                                        "enum": [
                                            "mentee",
                                            "mentor"
                                        ],
                                        "example": "mentee"
                                    },
                                    "interests": {
                                        "description": "Required if user_type is 'mentee'",
                                        "type": "string",
                                        "example": "Data Science, Product Management"
                                    },
                                    "goals": {
                                        "description": "Required if user_type is 'mentee'",
                                        "type": "string",
                                        "example": "To learn new skills and grow my career."
                                    },
                                    "photo_url": {
                                        "description": "Required if user_type is 'mentor'",
                                        "type": "string",
                                        "format": "url",
                                        "example": "http://example.com/photo.jpg"
                                    },
                                    "job_title": {
                                        "description": "Required if user_type is 'mentor'",
                                        "type": "string",
                                        "example": "Software Engineer"
                                    },
                                    "company": {
                                        "description": "Optional, for mentors",
                                        "type": "string",
                                        "example": "Tech Solutions Inc."
                                    },
                                    "location": {
                                        "description": "Required if user_type is 'mentor'",
                                        "type": "string",
                                        "example": "San Francisco, CA"
                                    },
                                    "category": {
                                        "description": "Required if user_type is 'mentor'",
                                        "type": "string",
                                        "enum": [
                                            "Engineering",
                                            "Product",
                                            "Design",
                                            "Marketing",
                                            "Leadership",
                                            "Other"
                                        ],
                                        "example": "Engineering"
                                    },
                                    "skills": {
                                        "description": "Required if user_type is 'mentor'",
                                        "type": "string",
                                        "example": "PHP, Laravel, API Design"
                                    },
                                    "bio": {
                                        "description": "Required if user_type is 'mentor'",
                                        "type": "string",
                                        "example": "Experienced software engineer passionate about mentoring."
                                    },
                                    "years_of_experience": {
                                        "description": "Required if user_type is 'mentor'",
                                        "type": "integer",
                                        "example": 5
                                    },
                                    "availability_hours_week": {
                                        "description": "Required if user_type is 'mentor'",
                                        "type": "number",
                                        "format": "float",
                                        "example": 10.5
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful registration",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "User registered successfully"
                                        },
                                        "user": {
                                            "$ref": "#/components/schemas/User"
                                        },
                                        "access_token": {
                                            "type": "string",
                                            "example": "1|xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx"
                                        },
                                        "token_type": {
                                            "type": "string",
                                            "example": "Bearer"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error"
                    }
                }
            }
        },
        "/login": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Login an existing user",
                "description": "Logs in a user and returns user data along with an API token.",
                "operationId": "loginUser",
                "requestBody": {
                    "description": "User login credentials",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email",
                                    "password"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "john.doe@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "password123"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful login",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Login successful"
                                        },
                                        "user": {
                                            "$ref": "#/components/schemas/User"
                                        },
                                        "access_token": {
                                            "type": "string",
                                            "example": "2|yyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyy"
                                        },
                                        "token_type": {
                                            "type": "string",
                                            "example": "Bearer"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Invalid credentials"
                    },
                    "422": {
                        "description": "Validation Error"
                    }
                }
            }
        },
        "/logout": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Logout the authenticated user",
                "description": "Invalidates the current user's API token.",
                "operationId": "logoutUser",
                "responses": {
                    "200": {
                        "description": "Successfully logged out",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Successfully logged out"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "apiAuth": []
                    }
                ]
            }
        },
        "/api/mentee/dashboard": {
            "get": {
                "tags": [
                    "Mentee Dashboard"
                ],
                "summary": "Get mentee dashboard data",
                "description": "Retrieves all necessary data for the mentee dashboard",
                "operationId": "getMenteeDashboard",
                "responses": {
                    "200": {
                        "description": "Mentee dashboard data retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "active_mentors_count": {
                                            "type": "integer",
                                            "example": 2
                                        },
                                        "learning_hours": {
                                            "type": "integer",
                                            "example": 16
                                        },
                                        "goals_completed_count": {
                                            "type": "integer",
                                            "example": 5
                                        },
                                        "upcoming_sessions": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Session"
                                            }
                                        },
                                        "past_sessions": {
                                            "type": "array",
                                            "items": {
                                                "allOf": [
                                                    {
                                                        "$ref": "#/components/schemas/Session"
                                                    },
                                                    {
                                                        "properties": {
                                                            "feedback_given": {
                                                                "type": "boolean",
                                                                "example": false
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                ]
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/mentor/dashboard": {
            "get": {
                "tags": [
                    "Mentors"
                ],
                "summary": "Get mentor dashboard data",
                "description": "Retrieves all necessary data for the mentor dashboard",
                "operationId": "getMentorDashboard",
                "responses": {
                    "200": {
                        "description": "Mentor dashboard data retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "active_mentees_count": {
                                            "type": "integer",
                                            "example": 12
                                        },
                                        "average_rating": {
                                            "type": "number",
                                            "format": "float",
                                            "example": 4.8
                                        },
                                        "hours_mentored": {
                                            "type": "integer",
                                            "example": 48
                                        },
                                        "upcoming_sessions": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Session"
                                            }
                                        },
                                        "recent_feedback": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Feedback"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/mentors": {
            "get": {
                "tags": [
                    "Mentors"
                ],
                "summary": "Get all mentors",
                "description": "Retrieves a list of all users with the 'mentor' type.",
                "operationId": "getMentors",
                "responses": {
                    "200": {
                        "description": "Mentors retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/User"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        }
    },
    "components": {
        "schemas": {
            "Feedback": {
                "title": "Feedback",
                "description": "Feedback model for sessions",
                "properties": {
                    "id": {
                        "description": "Feedback ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "session_id": {
                        "description": "ID of the session being reviewed",
                        "type": "integer",
                        "format": "int64"
                    },
                    "reviewer_id": {
                        "description": "ID of the User giving feedback (usually mentee)",
                        "type": "integer",
                        "format": "int64"
                    },
                    "reviewee_id": {
                        "description": "ID of the User being reviewed (usually mentor)",
                        "type": "integer",
                        "format": "int64"
                    },
                    "rating": {
                        "description": "Rating from 1 to 5 stars",
                        "type": "integer",
                        "maximum": 5,
                        "minimum": 1,
                        "nullable": true
                    },
                    "comment": {
                        "description": "Textual feedback/comment",
                        "type": "string"
                    },
                    "created_at": {
                        "description": "Timestamp of feedback submission",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "description": "Timestamp of last feedback update",
                        "type": "string",
                        "format": "date-time"
                    },
                    "reviewer": {
                        "$ref": "#/components/schemas/User"
                    },
                    "session": {
                        "$ref": "#/components/schemas/Session"
                    }
                },
                "type": "object"
            },
            "Goal": {
                "title": "Goal",
                "description": "Mentee's personal or professional goal",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "user_id": {
                        "description": "ID of the User (Mentee) this goal belongs to",
                        "type": "integer",
                        "format": "int64"
                    },
                    "title": {
                        "description": "Title of the goal",
                        "type": "string"
                    },
                    "description": {
                        "description": "Detailed description of the goal",
                        "type": "string",
                        "nullable": true
                    },
                    "status": {
                        "description": "Current status of the goal",
                        "type": "string",
                        "default": "todo",
                        "enum": [
                            "todo",
                            "in_progress",
                            "completed",
                            "on_hold"
                        ]
                    },
                    "due_date": {
                        "description": "Optional due date for the goal",
                        "type": "string",
                        "format": "date",
                        "nullable": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "Mentorship": {
                "title": "Mentorship",
                "description": "Represents an active or past mentorship connection",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "mentor_id": {
                        "description": "ID of the Mentor (User)",
                        "type": "integer",
                        "format": "int64"
                    },
                    "mentee_id": {
                        "description": "ID of the Mentee (User)",
                        "type": "integer",
                        "format": "int64"
                    },
                    "status": {
                        "description": "Status of the mentorship",
                        "type": "string",
                        "enum": [
                            "pending",
                            "active",
                            "ended",
                            "rejected"
                        ]
                    },
                    "started_at": {
                        "description": "Timestamp when mentorship became active",
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "ended_at": {
                        "description": "Timestamp when mentorship ended",
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "Session": {
                "title": "Session",
                "description": "Mentoring session model",
                "properties": {
                    "id": {
                        "description": "Session ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "mentor_id": {
                        "description": "ID of the Mentor (User)",
                        "type": "integer",
                        "format": "int64"
                    },
                    "mentee_id": {
                        "description": "ID of the Mentee (User)",
                        "type": "integer",
                        "format": "int64"
                    },
                    "title": {
                        "description": "Title or main topic of the session",
                        "type": "string"
                    },
                    "description": {
                        "description": "Detailed description or agenda",
                        "type": "string",
                        "nullable": true
                    },
                    "start_time": {
                        "description": "Scheduled start time of the session",
                        "type": "string",
                        "format": "date-time"
                    },
                    "end_time": {
                        "description": "Scheduled end time of the session",
                        "type": "string",
                        "format": "date-time"
                    },
                    "status": {
                        "description": "Status of the session",
                        "type": "string",
                        "enum": [
                            "upcoming",
                            "completed",
                            "cancelled",
                            "in_progress"
                        ]
                    },
                    "join_url": {
                        "description": "URL to join the virtual session",
                        "type": "string",
                        "nullable": true
                    },
                    "created_at": {
                        "description": "Timestamp of session creation",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "description": "Timestamp of last session update",
                        "type": "string",
                        "format": "date-time"
                    },
                    "mentor": {
                        "$ref": "#/components/schemas/User"
                    },
                    "mentee": {
                        "$ref": "#/components/schemas/User"
                    }
                },
                "type": "object"
            },
            "User": {
                "title": "User",
                "description": "User model",
                "properties": {
                    "id": {
                        "description": "User ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "first_name": {
                        "description": "User's first name",
                        "type": "string"
                    },
                    "last_name": {
                        "description": "User's last name",
                        "type": "string"
                    },
                    "email": {
                        "description": "User's email address",
                        "type": "string",
                        "format": "email"
                    },
                    "email_verified_at": {
                        "description": "Timestamp of email verification",
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "user_type": {
                        "description": "Type of user",
                        "type": "string",
                        "enum": [
                            "mentee",
                            "mentor"
                        ]
                    },
                    "interests": {
                        "description": "Mentee's interests (comma-separated or JSON)",
                        "type": "string",
                        "nullable": true
                    },
                    "goals": {
                        "description": "Mentee's goals",
                        "type": "string",
                        "nullable": true
                    },
                    "photo_url": {
                        "description": "Mentor's photo URL",
                        "type": "string",
                        "nullable": true
                    },
                    "job_title": {
                        "description": "Mentor's job title",
                        "type": "string",
                        "nullable": true
                    },
                    "company": {
                        "description": "Mentor's company (optional)",
                        "type": "string",
                        "nullable": true
                    },
                    "location": {
                        "description": "Mentor's location",
                        "type": "string",
                        "nullable": true
                    },
                    "category": {
                        "description": "Mentor's category",
                        "type": "string",
                        "nullable": true
                    },
                    "skills": {
                        "description": "Mentor's skills (comma-separated or JSON)",
                        "type": "string",
                        "nullable": true
                    },
                    "bio": {
                        "description": "Mentor's biography",
                        "type": "string",
                        "nullable": true
                    },
                    "years_of_experience": {
                        "description": "Mentor's years of experience",
                        "type": "integer",
                        "nullable": true
                    },
                    "availability_hours_week": {
                        "description": "Mentor's availability in hours per week",
                        "type": "number",
                        "format": "float",
                        "nullable": true
                    },
                    "created_at": {
                        "description": "Timestamp of user creation",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "description": "Timestamp of last user update",
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            }
        },
        "securitySchemes": {
            "apiAuth": {
                "type": "http",
                "description": "Bearer token for authentication",
                "bearerFormat": "JWT",
                "scheme": "bearer"
            }
        }
    },
    "tags": [
        {
            "name": "Mentee Dashboard",
            "description": "API Endpoints for Mentee Dashboard"
        },
        {
            "name": "Mentors",
            "description": "API Endpoints for Mentor Operations"
        },
        {
            "name": "Authentication",
            "description": "Authentication"
        }
    ]
}